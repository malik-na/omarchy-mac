---
name: CI

"on":
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  shellcheck:
    name: Shellcheck
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run ShellCheck
        uses: ludeeus/action-shellcheck@master
        with:
          scandir: './install'
          format: gcc
          severity: error
          disable_check: SC2148

  docker-test:
    name: Dry-run install in Arch Linux (aarch64)
    runs-on: ubuntu-latest
    needs: shellcheck

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU for aarch64
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/arm64

      - name: Pull Arch Linux aarch64 image
        run: docker pull --platform linux/arm64 archlinux:latest

      - name: Prepare installer directory
        run: |
          mkdir -p ci-test/.local/share/omarchy
          cp -r . ci-test/.local/share/omarchy/
          # Remove .git directory to avoid issues
          rm -rf ci-test/.local/share/omarchy/.git
        shell: bash

      - name: Create dry-run script
        run: |
          cat > ci-test/test-install.sh << 'EOF'
          #!/bin/bash

          # Set up environment for dry-run testing
          export HOME="/root"
          export OMARCHY_PATH="/root/.local/share/omarchy"
          export OMARCHY_INSTALL="$OMARCHY_PATH/install"
          export OMARCHY_INSTALL_LOG_FILE="/var/log/omarchy-install.log"
          export PATH="$OMARCHY_PATH/bin:$PATH"

          # Create necessary directories
          mkdir -p "$HOME/.local/share"
          cp -r /omarchy/.local/share/omarchy "$HOME/.local/share/"

          # Run fix-mirrors.sh in dry-run mode to test aarch64 compatibility
          echo "=== Testing fix-mirrors.sh in dry-run mode ==="
          cd "$OMARCHY_PATH"
          bash fix-mirrors.sh --dry-run

          # Test that the guard.sh script accepts aarch64
          echo "=== Testing architecture compatibility ==="
          ARCH="$(uname -m)"
          echo "Detected architecture: $ARCH"

          # Test the guard script logic for aarch64
          if [[ "$ARCH" == "aarch64" ]]; then
            echo "✓ aarch64 architecture detected and should be supported"
          else
            echo "Architecture: $ARCH (emulated for testing)"
          fi

          # Verify the guard.sh script supports aarch64
          GUARD_FILE="$OMARCHY_INSTALL/preflight/guard.sh"
          if grep -q 'aarch64' "$GUARD_FILE"; then
            echo "✓ guard.sh includes aarch64 support"
          else
            echo "✗ guard.sh missing aarch64 support"
            exit 1
          fi

          echo "=== Dry-run test completed successfully ==="
          EOF
          chmod +x ci-test/test-install.sh
        shell: bash

      - name: Run installation test in Docker (aarch64)
        run: |
          docker run --rm \
            --platform linux/arm64 \
            -v "${{ github.workspace }}/ci-test:/omarchy" \
            -w /omarchy \
            archlinux:latest \
            bash -c "
              # Update package database and install essential packages
              pacman -Sy --noconfirm
              pacman -S --noconfirm bash grep sed

              # Run the test script
              bash -x test-install.sh
            "
        shell: bash
